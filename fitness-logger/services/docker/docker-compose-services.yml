version: "3.1"

services:
  # zoo:
  #   image: zookeeper:3.4.9
  #   hostname: zoo1
  #   ports:
  #     - "2181:2181"
  #   environment:
  #       ZOO_MY_ID: 1
  #       ZOO_PORT: 2181
  #       ZOO_SERVERS: server.1=zoo1:2888:3888
  #   volumes:
  #     - ./zk-single-kafka-single/zoo1/data:/data
  #     - ./zk-single-kafka-single/zoo1/datalog:/datalog

  # kafka:
  #   image: confluentinc/cp-kafka:5.5.1
  #   hostname: kafka1
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #     KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   volumes:
  #     - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
  #   depends_on:
  #     - zoo1

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./mongodb-data:/data/db
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT
    ports:
      - 27017:27017
    command: [--auth]

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_ROOT
